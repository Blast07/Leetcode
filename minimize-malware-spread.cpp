class Solution {
public:
int minMalwareSpread(vector <vector <int>> &graph, vector <int> &initial){
	
	sort(initial.begin(), initial.end());
	
	vector <int> visited(graph.size(), 0); 
	
	for (int x:initial){
		visited[x] = -1; //infected
    }
	
	
	int total = 0;

	for (int x: initial){
		vector <int> st;
		if (visited[x] == -1){ //not visited
			st.push_back(x);
			bool only_infected = true;
             
			while(st.size()){
				int top = st.back(); st.pop_back();
				total++;

				//generate negihbors
				for (int i=0;i<graph.size();i++){
					if ((top!=i  && graph[top][i]) && (i!=x && visited[i]<=0) ){
						if (visited[i] == -1)
							only_infected = false;	

						visited[i] = x+1;
						visited[x]--;
						st.push_back(i);
					}
				}
				if (!only_infected)
					visited[x] = 0;
			}
		}
	}
	int res=0;
	int min_infected = INT_MAX;

	for (int x:initial){
		if (visited[x] <= 0){
			if (min_infected > total + visited[x]){
				min_infected = total + visited[x];
				res = x;
			}
		}
	}

	return res;
}

};